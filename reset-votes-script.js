// Script de r√©initialisation des votes HAG
// √Ä ex√©cuter dans la console du navigateur (F12)

console.log('üîÑ R√©initialisation des votes HAG...');

// V√©rifier les donn√©es actuelles
const votesData = localStorage.getItem('hag_candidates_votes');
const ratingsData = localStorage.getItem('hag_candidates_ratings');

console.log('üìä Donn√©es actuelles :');
if (votesData) {
    const votes = JSON.parse(votesData);
    console.log(`Votes: ${votes.length} candidats`);
    votes.forEach(candidate => {
        console.log(`  ‚Ä¢ ${candidate.name}: ${candidate.votes} votes ${candidate.isVoted ? '(vot√©)' : ''}`);
    });
} else {
    console.log('Votes: Aucune donn√©e');
}

if (ratingsData) {
    const ratings = JSON.parse(ratingsData);
    console.log(`Notes: ${ratings.length} candidats`);
    ratings.forEach(candidate => {
        console.log(`  ‚Ä¢ ${candidate.name}: ${candidate.rating}/5 (${candidate.totalRatings} avis)`);
    });
} else {
    console.log('Notes: Aucune donn√©e');
}

// R√©initialiser les votes
localStorage.removeItem('hag_candidates_votes');
console.log('‚úÖ Votes r√©initialis√©s');

// R√©initialiser les notes
localStorage.removeItem('hag_candidates_ratings');
console.log('‚úÖ Notes r√©initialis√©es');

// V√©rifier que tout a √©t√© supprim√©
const remainingVotes = localStorage.getItem('hag_candidates_votes');
const remainingRatings = localStorage.getItem('hag_candidates_ratings');

if (!remainingVotes && !remainingRatings) {
    console.log('üéâ R√©initialisation compl√®te r√©ussie !');
    console.log('Toutes les donn√©es de vote et de notation ont √©t√© supprim√©es du localStorage.');
} else {
    console.log('‚ö†Ô∏è Erreur lors de la r√©initialisation');
}

// Afficher un message de confirmation
alert('Votes r√©initialis√©s avec succ√®s !\n\nToutes les donn√©es de vote et de notation ont √©t√© supprim√©es du localStorage.');
